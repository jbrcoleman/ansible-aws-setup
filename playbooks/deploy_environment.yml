- name: Deploy VPC
  hosts: localhost
  vars:
    - region: "us-east-1"
    - az1: "us-east-1a"
    - az2: "us-east-1b"
    - key_pair_name: "launch"
    - instance_type: "t3.micro"
    - ami_id: "ami-048f6ed62451373d9"
    - EBS_size: 50  
  tasks:
    - name: Deploy VPC
      ec2_vpc_net:
        name: Base
        state: present
        cidr_block: 10.0.0.0/16
        region: "{{ region }}"
      register: vpc    

    - name: Deploy Public subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az2 }}"
        cidr: 10.0.255.192/28
        tags:
          Name: Public Subnet
      register: public_subnet

    - name: Deploy Private subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpc.vpc.id }}"
        cidr: 10.0.255.208/28
        region: "{{ region }}"
        az: "{{ az2 }}"
        tags:
          Name: Private Subnet
      register: private_subnet

    - name: Deploy Data subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az1 }}"
        cidr: 10.0.255.224/28
        tags:
          Name: Data Subnet
      register: data_subnet
    
    - name: Deploy IGW
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        state: present
        tags:
          Name: IGW
      register: igw

    - name: Create new nat gateway and allocate new EIP.
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ public_subnet.subnet.id }}"
        wait: true
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: nat_gateway

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Public
        subnets:
          - "{{ public_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table 

    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Private
        subnets:
          - "{{ private_subnet.subnet.id }}"
          - "{{ data_subnet.subnet.id }}" 
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gateway.nat_gateway_id }}"
      register: private_route_table
   
    - name: create a private zone
      route53_zone:
        zone: example.com
        vpc_id: "vpc-06c7f281b105f02e4" #"{{ vpc.vpc.id }}"
        vpc_region: "{{ region }}"
      tags: zone


    - name: deploy elb  
      ec2_elb_lb:
        name: "test-please-delete"
        state: present
        region: "{{ region }}"
        subnets: 
          - "subnet-0e22282034c9a7493" #"{{ public_subnet.subnet.id }}"
        listeners:
          - protocol: http # options are http, https, ssl, tcp
            load_balancer_port: 80
            instance_port: 80
            proxy_protocol: True
          - protocol: https
            load_balancer_port: 443
            instance_protocol: http # optional, defaults to value of protocol setting
            instance_port: 80
            ssl_certificate_id:	arn:aws:acm:us-east-1:202254811034:certificate/54e83993-bb99-449c-8523-25f8fe2b9204
      tags: elb

    - elb_classic_lb_info:
        names: "test-please-delete"
        region: "{{ region }}"
      register: elb_info
      tags: elb

    - name: get elb ip
      command: dig +short "{{ elb_info.elbs.0.dns_name }}"
      tags: elb
      register: elb_ip

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: elb_ip.stdout_lines[0]
      tags: elb

